"""Added tables

Revision ID: 5baedb5ebba6
Revises:
Create Date: 2020-05-19 14:18:19.202904

"""
import sqlalchemy as sa
from sqlalchemy.dialects import mysql
from passlib.context import CryptContext
from alembic import op

pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")

# revision identifiers, used by Alembic.
revision = '5baedb5ebba6'
down_revision = None
branch_labels = None
depends_on = None


#pylint: disable=no-member
def upgrade():
    """upgrade process"""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'Authors',
        sa.Column('AuthorId', mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('Name', mysql.VARCHAR(length=150), nullable=True),
        sa.PrimaryKeyConstraint('AuthorId')
    )
    op.create_index(op.f('ix_Authors_AuthorId'), 'Authors', ['AuthorId'], unique=False)

    op.create_table(
        'Cars',
        sa.Column('Id', mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('Name', mysql.VARCHAR(length=150), nullable=True),
        sa.Column('Price', mysql.INTEGER(), nullable=True),
        sa.PrimaryKeyConstraint('Id')
    )
    op.create_index(op.f('ix_Cars_Id'), 'Cars', ['Id'], unique=False)

    op.create_table(
        'Users',
        sa.Column('UserId', mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('Username', mysql.VARCHAR(length=32), nullable=True),
        sa.Column('Fullname', mysql.VARCHAR(length=150), nullable=True),
        sa.Column('Email', mysql.TEXT(), nullable=True),
        sa.Column('Password', mysql.VARCHAR(length=32), nullable=True),
        sa.Column('Status', sa.BOOLEAN(), server_default=sa.schema.DefaultClause("0")),
        sa.PrimaryKeyConstraint('UserId')
    )
    op.create_index(op.f('ix_Users_UserId'), 'Users', ['UserId'], unique=False)

    op.create_table(
        'Books',
        sa.Column('BookId', mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column('Title', mysql.TEXT(), nullable=True),
        sa.Column('AuthorId', mysql.INTEGER(), nullable=False),
        sa.ForeignKeyConstraint(['AuthorId'], ['Authors.AuthorId'], ),
        sa.PrimaryKeyConstraint('BookId')
    )
    op.create_index(op.f('ix_Books_BookId'), 'Books', ['BookId'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    """downgrade process"""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_Books_BookId'), table_name='Books')
    op.drop_table('Books')
    op.drop_index(op.f('ix_Users_UserId'), table_name='Users')
    op.drop_table('Users')
    op.drop_index(op.f('ix_Cars_Id'), table_name='Cars')
    op.drop_table('Cars')
    op.drop_index(op.f('ix_Authors_AuthorId'), table_name='Authors')
    op.drop_table('Authors')
    # ### end Alembic commands ###
